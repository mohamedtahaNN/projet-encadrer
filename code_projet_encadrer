#include<stdio.h>
#include<stdlib.h>
#include<string.h>

#define MAX_PRODUCTS 100
#define MAX_NAME_LENGTH 50

typedef struct {
    char name[MAX_NAME_LENGTH];
    float price;
    int quantity;
} Produit;

void sauvegarderProduits(Produit produits[], int numProduits, const char *nomFichier) {
    FILE *fichier = fopen(nomFichier, "w");
    if (fichier == NULL) {
        printf("Erreur lors de l'ouverture du fichier pour sauvegarde.\n");
        return;
    }

    for (int i = 0; i < numProduits; ++i) {
        fprintf(fichier, "%s %.2f %d\n", produits[i].name, produits[i].price, produits[i].quantity);
    }

    fclose(fichier);
    printf("Produits sauvegardes avec succes dans le fichier '%s'.\n", nomFichier);
}
void chargerProduits(Produit produits[], int *numProduits, const char *nomFichier) {
    FILE *fichier = fopen(nomFichier, "r");
    if (fichier == NULL) {
        printf("Erreur lors de l'ouverture du fichier pour chargement.\n");
        return;
    }

    *numProduits = 0; 

    while (*numProduits < MAX_PRODUCTS && fscanf(fichier, "%s %f %d", produits[*numProduits].name, &produits[*numProduits].price, &produits[*numProduits].quantity) == 3) {
        (*numProduits)++;
            }

    fclose(fichier);
    printf("Produits charges avec succes depuis le fichier '%s'.\n", nomFichier);
}

int compareProduits(const void *a, const void *b) {
    const Produit *prodA = (const Produit *)a;
    const Produit *prodB = (const Produit *)b;
    return strcmp(prodA->name, prodB->name);
}


void triProduitsParNom(Produit produits[], int numProduits) {
    if (numProduits == 0) {
        printf("La liste de produits est vide. Aucun produit a trier.\n");
        return;
    }

    
    qsort(produits, numProduits, sizeof(Produit), compareProduits);

    printf("Les produits ont ete tries par nom avec succes.\n");
}
void ajoutproduit(Produit produits[], int *numProduits) {
    if (*numProduits >= MAX_PRODUCTS) {
        printf("Limite maximale de produits atteinte.\n");
        return;
    }

    printf("Entrez le nom du produit : ");
    scanf("%s", produits[*numProduits].name);

    printf("Entrez le prix du produit : ");
    scanf("%f", &produits[*numProduits].price);

    printf("Entrez la quantite du produit : ");
    scanf("%d", &produits[*numProduits].quantity);

    while (getchar() != '\n');

    (*numProduits)++;
}

void modifierProduit(Produit produits[], int numProduits) {
    if (numProduits == 0) {
        printf("La liste de produits est vide.\n");
        return;
    }

    char nomproduits[MAX_NAME_LENGTH];
    printf("Entrez le nom du produit a modifier : ");
    scanf("%s", nomproduits);

    int i;
    for (i = 0; i < numProduits; ++i) {
        if (strcmp(produits[i].name, nomproduits) == 0) {
        
            printf("Nouveau nom pour le produit : ");
            scanf("%s", produits[i].name);

            printf("Nouveau prix pour le produit : ");
            scanf("%f", &produits[i].price);

            printf("Nouvelle quantite pour le produit : ");
            scanf("%d", &produits[i].quantity);

            while (getchar() != '\n');

            printf("Le produit a ete modifie avec succes.\n");
            return;
        }
    }

    printf("Produit non trouve dans la liste.\n");
}

void effacerproduit(Produit produits[], int *numproduits) {
    if (*numproduits == 0) {
        printf("La liste de produits est vide.\n");
        return;
    }

    char nomproduit[MAX_NAME_LENGTH];
    printf("Entrez le nom du produit a supprimer : ");
    scanf("%s", nomproduit);

    int i, found = 0;
    for (i = 0; i < *numproduits; ++i) {
        if (strcmp(produits[i].name, nomproduit) == 0) {
            found = 1;

            for (int j = i; j < *numproduits - 1; ++j) {
                produits[j] = produits[j + 1];
            }

            (*numproduits)--;
            printf("Le produit a ete supprime avec succes.\n");
            break;
        }
    }

    if (!found) {
        printf("Produit non trouve dans la liste.\n");
    }
}
void chercherProduit(Produit produits[], int numProduits) {
    if (numProduits == 0) {
        printf("La liste de produits est vide.\n");
        return;
    }

    char nomProduit[MAX_NAME_LENGTH];
    printf("Entrez le nom du produit a chercher : ");
    scanf("%s", nomProduit);

    int i, found = 0;
    for (i = 0; i < numProduits; ++i) {
        if (strcmp(produits[i].name, nomProduit) == 0) {
            found = 1;
            printf("Produit trouve :\n");
            printf("Nom: %s\n", produits[i].name);
            printf("Prix: %.2f\n", produits[i].price);
            printf("Quantite: %d\n", produits[i].quantity);
            break;
        }
    }

    if (!found) {
        printf("Produit non trouve dans la liste.\n");
    }
    
}

int main() {
    Produit produits[MAX_PRODUCTS];
    int numproduits = 0;
    char choice;
    char nomFichier[MAX_NAME_LENGTH];

    do {
        printf("\n***************************MENU*********************** :\n");
        printf("1. Ajouter un produit\n");
        printf("2. Modifier un produit\n");
        printf("3. Effacer un produit\n");
        printf("4. Chercher un produit\n");
        printf("5. Trier les produits par nom\n");
        printf("6. Sauvegarder les produits dans un fichier\n");
        printf("7. Charger les produits depuis un fichier\n");
        printf("8. Quitter\n");
        printf("Choix : ");
        scanf(" %c", &choice);

        switch (choice) {
            case '1':
                ajoutproduit(produits, &numproduits);
                break;
            case '2':
                modifierProduit(produits, numproduits);
                break;
            case '3':
                effacerproduit(produits, &numproduits);
                break;
            case '4':
                chercherProduit(produits, numproduits);
                break;
            case '5':
                triProduitsParNom(produits, numproduits);
                break;
            case '6':
                printf("Entrez le nom du fichier pour sauvegarde : ");
                scanf("%s", nomFichier);
                sauvegarderProduits(produits, numproduits, nomFichier);
                break;
            case '7':
                printf("Entrez le nom du fichier pour chargement : ");
                scanf("%s", nomFichier);
                chargerProduits(produits, &numproduits, nomFichier);
                break;
            case '8':
                printf("Au revoir!\n");
                break;
            default:
                printf("Choix invalide. Veuillez ressayer.\n");
        }
    } while (choice != '8');

    return 0;
}
